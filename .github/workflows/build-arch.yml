name: Build Arch Linux packages

on: workflow_call

jobs:
  init:
    name: Initialize Arch Linux package builds
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.find-packages.outputs.matrix }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Find all Arch Linux packages
        id: find-packages
        run: |
          find arch -mindepth 1 -maxdepth 1 \
            | sed 's|^arch/||' \
            | jq -R \
            | jq -cs '{ "package": . }' \
            > matrix.json
          echo "matrix=$(cat matrix.json)" >> $GITHUB_OUTPUT

  build:
    name: Build all packages
    runs-on: ubuntu-latest
    needs:
      - init
    strategy:
      matrix: ${{ fromJson(needs.init.outputs.matrix) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Arch Linux environment
        uses: RangHo/setup-arch@v1

      - name: Add personal repository
        run: |
          cat <<EOF | sudo tee -a /etc/pacman.conf
          [rangho-repository]
          Server = https://by.rangho.dev/repository/arch
          EOF
          curl -sSL https://by.rangho.dev/repository/public.asc > rangho-repository.asc
          sudo pacman-key --add rangho-repository.asc
          sudo pacman-key --lsign-key 5B7BDEC59930AB952EBBDEA60F0C772347B79377
          sudo pacman -Sy
        shell: arch.sh {0}

      - name: Build package
        run: |
          cd arch/${{ matrix.package }}
          if [ -d keys ]; then
            sudo gpgconf --kill dirmngr
            sudo chown -R $USER ~/.gnupg
            find keys -type f | xargs gpg --import
          fi
          MAKEFLAGS="--jobs=$(nproc)" makepkg -s --noconfirm
        shell: arch.sh {0}

      - name: Uplaod package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: arch-${{ matrix.package }}
          path: arch/${{ matrix.package }}/*.pkg.tar.zst

  register:
    name: Register all packages
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - build

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: arch-*

      - name: Copy all packages into repository directory
        run: |
          mkdir ./arch
          cp ./artifacts/*/*.pkg.tar.zst ./arch

      - name: Set up Arch Linux environment
        uses: RangHo/setup-arch@v1

      - name: Add all packages to the repository
        run: |
          repo-add \
            ./arch/rangho-repository.db.tar.zst ./arch/*.pkg.tar.zst
        shell: arch.sh {0}

      - name: Upload the resulting repository as artifact
        uses: actions/upload-artifact@v4
        with:
          name: arch-unsigned
          path: arch

  sign:
    name: Sign the repository
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - register

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: arch-unsigned

      - name: Import GPG keys
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.RANGHO_REPOSITORY_SIGNING_PGP_PRIVATE }}
          passphrase: ${{ secrets.RANGHO_REPOSITORY_SIGNING_PGP_PASSWORD }}

      - name: Sign all files in the repository
        run: |
          cd arch-unsigned
          for pkg in *; do
            echo ${{ secrets.RANGHO_REPOSITORY_SIGNING_PGP_PASSWORD }} \
              | gpg \
                --detach-sign \
                --no-armor \
                --default-key 5B7BDEC59930AB952EBBDEA60F0C772347B79377 \
                --pinentry-mode loopback \
                --passphrase-fd 0 \
                $pkg
          done

      - name: Upload the resulting repository as artifact
        uses: actions/upload-artifact@v4
        with:
          name: arch
          path: arch-unsigned
